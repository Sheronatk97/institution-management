const express =require("express");
const Course = require("../models/course.model");

const router = express.Router();

// Create a new course
router.post("/create", async (req, res) => {
  try {
    const course = new Course(req.body);
    await course.save();
    res.status(201).json(course);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// // Get all courses
// router.get("/", async (req, res) => {
//   try {
//     const courses = await Course.find().populate("BDM_id").populate("students");
//     res.status(200).json(courses);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });


router.get("/get", async (req, res) => {
  try {
    const courses = await Course.find()
      .populate("BDM_id", "name")  // Populate only the name field of BDM
      .populate("students", "name");  // Assuming you also want to display student names
    res.status(200).json(courses);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});


// Get a course by ID
router.get("/getbyid/:id", async (req, res) => {
  try {
    const course = await Course.findById(req.params.id).populate("BDM_id").populate("students");
    if (!course) return res.status(404).json({ message: "Course not found" });
    res.status(200).json(course);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// Update course details
router.put("/update/:id", async (req, res) => {
  try {
    const course = await Course.findByIdAndUpdate(req.params.id, req.body, { new: true });
    if (!course) return res.status(404).json({ message: "Course not found" });
    res.status(200).json(course);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// Delete a course
router.delete("/delete/:id", async (req, res) => {
  try {
    const course = await Course.findByIdAndDelete(req.params.id);
    if (!course) return res.status(404).json({ message: "Course not found" });
    res.status(200).json({ message: "Course deleted successfully" });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});


module.exports = router;






// const express = require("express");
// const Course = require("../models/course.model");  // Corrected the path

// const router = express.Router();

// // Create a new course
// router.post("/create", async (req, res) => {
//   try {
//     const course = new Course(req.body);
//     await course.save();
//     res.status(201).json(course);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Get all courses
// router.get("/get", async (req, res) => {
//   try {
//     const courses = await Course.find()
//       .populate("BDM_id", "name")  // Populate only the name field of BDM
//       .populate("students", "name");  // Assuming you want to display student names as well
//     res.status(200).json(courses);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Get a course by ID
// router.get("/getbyid/:id", async (req, res) => {
//   try {
//     const course = await Course.findById(req.params.id)
//       .populate("BDM_id", "name")  // Populate only the name field of BDM
//       .populate("students", "name");
//     if (!course) return res.status(404).json({ message: "Course not found" });
//     res.status(200).json(course);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Update course details
// router.put("/update/:id", async (req, res) => {
//   try {
//     const course = await Course.findByIdAndUpdate(req.params.id, req.body, { new: true });
//     if (!course) return res.status(404).json({ message: "Course not found" });
//     res.status(200).json(course);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Delete a course
// router.delete("/delete/:id", async (req, res) => {
//   try {
//     const course = await Course.findByIdAndDelete(req.params.id);
//     if (!course) return res.status(404).json({ message: "Course not found" });
//     res.status(200).json({ message: "Course deleted successfully" });
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// module.exports = router;



// const express = require("express");
// const Course = require("../models/course.model");  // Corrected the path

// const router = express.Router();

// // Create a new course
// router.post("/create", async (req, res) => {
//   try {
//     // Create a new course using the request body
//     const course = new Course(req.body);
    
//     // Save the new course to the database
//     await course.save();
    
//     // Respond with the newly created course
//     res.status(201).json(course);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Get all courses
// router.get("/get", async (req, res) => {
//   try {
//     // Retrieve all courses from the database
//     const courses = await Course.find();
    
//     // Respond with the list of courses
//     res.status(200).json(courses);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Get a course by ID
// router.get("/getbyid/:id", async (req, res) => {
//   try {
//     // Find a course by its ID
//     const course = await Course.findById(req.params.id);
    
//     // If the course is not found, return a 404 error
//     if (!course) return res.status(404).json({ message: "Course not found" });
    
//     // Respond with the found course
//     res.status(200).json(course);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Update course details
// router.put("/update/:id", async (req, res) => {
//   try {
//     // Find the course by ID and update it with the request body
//     const course = await Course.findByIdAndUpdate(req.params.id, req.body, { new: true });
    
//     // If the course is not found, return a 404 error
//     if (!course) return res.status(404).json({ message: "Course not found" });
    
//     // Respond with the updated course
//     res.status(200).json(course);
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// // Delete a course
// router.delete("/delete/:id", async (req, res) => {
//   try {
//     // Find the course by ID and delete it
//     const course = await Course.findByIdAndDelete(req.params.id);
    
//     // If the course is not found, return a 404 error
//     if (!course) return res.status(404).json({ message: "Course not found" });
    
//     // Respond with a success message
//     res.status(200).json({ message: "Course deleted successfully" });
//   } catch (error) {
//     res.status(500).json({ error: error.message });
//   }
// });

// module.exports = router;
